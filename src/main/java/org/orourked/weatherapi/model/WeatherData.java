package org.orourked.weatherapi.model;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

/**
 * Represents a weather data record stored in MongoDB. This class maps to the "weatherData"
 * collection and holds information about sensor readings such as temperature, humidity, windspeed,
 * pressure, and timestamp.
 */
@Document(collection = "weatherData")
public class WeatherData {

  // The unique identifier for each weather data record (automatically generated by MongoDB).
  @Id private String id;

  // The ID of the sensor that generated this weather data.
  private String sensorId;

  // The location where the weather data was recorded (e.g., city or area).
  private String location;

  // The temperature recorded by the sensor (in degrees, e.g., Celsius or Fahrenheit).
  private double temperature;

  // The humidity level recorded by the sensor (as a percentage).
  private double humidity;

  // The windspeed recorded by the sensor (in units such as km/h or mph).
  private Double windspeed;

  // The atmospheric pressure recorded by the sensor (in hPa or other units).
  private double pressure;

  // The timestamp of when the weather data was recorded (as a string, typically ISO 8601 format).
  private String timestamp;

  // Getter for the unique identifier of the weather data record.
  public String getId() {
    return id;
  }

  /**
   * Sets the unique identifier for this weather data record.
   *
   * @param id the unique identifier
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setId(String id) {
    this.id = id;
    return this;
  }

  // Getter for the sensor ID that recorded this weather data.
  public String getSensorId() {
    return sensorId;
  }

  /**
   * Sets the sensor ID for this weather data record.
   *
   * @param sensorId the sensor ID
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setSensorId(String sensorId) {
    this.sensorId = sensorId;
    return this;
  }

  // Getter for the location where the weather data was recorded.
  public String getLocation() {
    return location;
  }

  /**
   * Sets the location for this weather data record.
   *
   * @param location the location (e.g., city or area)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setLocation(String location) {
    this.location = location;
    return this;
  }

  // Getter for the temperature recorded by the sensor.
  public double getTemperature() {
    return temperature;
  }

  /**
   * Sets the temperature for this weather data record.
   *
   * @param temperature the temperature (in degrees)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setTemperature(double temperature) {
    this.temperature = temperature;
    return this;
  }

  // Getter for the humidity recorded by the sensor.
  public double getHumidity() {
    return humidity;
  }

  /**
   * Sets the humidity level for this weather data record.
   *
   * @param humidity the humidity (as a percentage)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setHumidity(double humidity) {
    this.humidity = humidity;
    return this;
  }

  // Getter for the windspeed recorded by the sensor.
  public Double getWindspeed() {
    return windspeed;
  }

  /**
   * Sets the windspeed for this weather data record.
   *
   * @param windspeed the windspeed (in units such as km/h or mph)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setWindspeed(Double windspeed) {
    this.windspeed = windspeed;
    return this;
  }

  // Getter for the atmospheric pressure recorded by the sensor.
  public double getPressure() {
    return pressure;
  }

  /**
   * Sets the pressure for this weather data record.
   *
   * @param pressure the atmospheric pressure (in hPa or other units)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setPressure(double pressure) {
    this.pressure = pressure;
    return this;
  }

  // Getter for the timestamp when the weather data was recorded.
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the timestamp for this weather data record.
   *
   * @param timestamp the timestamp (typically in ISO 8601 format)
   * @return the current instance of WeatherData (for method chaining)
   */
  public WeatherData setTimestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }
}
